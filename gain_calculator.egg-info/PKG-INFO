Metadata-Version: 2.1
Name: gain-calculator
Version: 0.0.5
Summary: A package providing a wrapper around Flexible Atomic Code specifically for gain predictions.
Home-page: https://github.com/SachCZ/gain-calculator
Author: Martin Sach
Author-email: martin.sachin@gmail.com
License: UNKNOWN
Description: # Gain Calculator
        
        > Small package to make atomic physics lasing gain calculations easier
        
        This Python 2 package is a wrapper around the Flexible Atomic Code - 
        [FAC](https://github.com/flexible-atomic-code/fac). It aims to greatly simplify the
        calculation of gain based state variables and atomic data provided by
        [FAC](https://github.com/flexible-atomic-code/fac). 
        
        [![Documentation Status](https://readthedocs.org/projects/gain-calculator/badge/?version=latest)](https://gain-calculator.readthedocs.io/en/latest/?badge=latest)
        
        ## Dependencies
        A dependency that is not installed during the installation of this package is the
        [FAC](https://github.com/flexible-atomic-code/fac). Before using this package please
        install the Flexible Atomic Code with Python interface pfac. 
        
        You can check that pfac is installed successfully using those commands:
        ```
        python -c "import pfac"
        echo $?
        # should print 0
        ```
        
        
        ## Install
        To install the package simply run:
        ```bash
        pip install gain_calculator
        ```
        
        ## Usage
        
        The usage of this package is demonstrated with following example:
        
        ```python
        import gain_calculator as gc
        
        atom = gc.Atom(
            symbol="Ge",
            config_groups=gc.ConfigGroups(base="1*2 2*8", max_n=3),
        )
        
        print atom.get_combined_populations(
            energy_level=gc.EnergyLevel("1s+2(0)0 2s+2(0)0 2p-2(0)0 2p+3(3)3 3s+1(1)4"),
            temperatures=900,
            electron_densities=1e20,
        )["population"][0]
        ```
        
        To get started or to see more examples please refer to the [documentation](https://gain-calculator.readthedocs.io/).
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
Requires-Python: >=2.7
Description-Content-Type: text/markdown
